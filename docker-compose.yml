version: "3.8"

services:
  # Servicio de Traefik como proxy inverso
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=you@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./acme.json:/acme.json"
      - "./traefik.yml:/etc/traefik/traefik.yml"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
    networks:
      - web

  # Servicio de Laravel
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    environment:
      APP_ENV: production
      APP_KEY: base64:YourBase64KeyHere
      APP_DEBUG: false
      APP_URL: https://laranatriste.site
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: password
    volumes:
      - "./app:/var/www/html"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`laranatriste.site`)"
      - "traefik.http.services.app.loadbalancer.server.port=80"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls.certresolver=myresolver"
    deploy:
      replicas: 3
    networks:
      - web
      - internal

  # Base de datos MySQL
  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: laravel
      MYSQL_USER: root
      MYSQL_PASSWORD: password
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - internal

networks:
  web:
    external: true
  internal:
    driver: overlay

volumes:
  db_data:
